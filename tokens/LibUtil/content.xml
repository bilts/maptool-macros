<net.rptools.maptool.model.Token>
  <id>
    <baGUID>wKgBAZ71jz3KLQAAAIgBAA==</baGUID>
  </id>
  <beingImpersonated>false</beingImpersonated>
  <imageAssetMap>
    <entry>
      <null/>
      <net.rptools.lib.MD5Key>
        <id>98a35b9f71208a7cc03e80fbf3a839a3</id>
      </net.rptools.lib.MD5Key>
    </entry>
  </imageAssetMap>
  <x>950</x>
  <y>450</y>
  <z>9</z>
  <anchorX>0</anchorX>
  <anchorY>0</anchorY>
  <sizeScale>1.0</sizeScale>
  <lastX>0</lastX>
  <lastY>0</lastY>
  <snapToScale>true</snapToScale>
  <width>64</width>
  <height>64</height>
  <scaleX>1.0</scaleX>
  <scaleY>1.0</scaleY>
  <sizeMap>
    <entry>
      <java-class>net.rptools.maptool.model.SquareGrid</java-class>
      <net.rptools.maptool.model.GUID>
        <baGUID>fwABAdBlFSoGAAAAKgABAA==</baGUID>
      </net.rptools.maptool.model.GUID>
    </entry>
  </sizeMap>
  <snapToGrid>true</snapToGrid>
  <isVisible>true</isVisible>
  <name>Lib:Util</name>
  <ownerType>0</ownerType>
  <tokenShape>TOP_DOWN</tokenShape>
  <tokenType>NPC</tokenType>
  <layer>TOKEN</layer>
  <propertyType>Library</propertyType>
  <isFlippedX>false</isFlippedX>
  <isFlippedY>false</isFlippedY>
  <sightType>Normal</sightType>
  <hasSight>false</hasSight>
  <state>
    <entry>
      <string>Incapacitated</string>
      <boolean>false</boolean>
    </entry>
    <entry>
      <string>Disabled</string>
      <boolean>false</boolean>
    </entry>
    <entry>
      <string>Other2</string>
      <boolean>false</boolean>
    </entry>
    <entry>
      <string>Other</string>
      <boolean>false</boolean>
    </entry>
    <entry>
      <string>Other3</string>
      <boolean>false</boolean>
    </entry>
    <entry>
      <string>Prone</string>
      <boolean>false</boolean>
    </entry>
    <entry>
      <string>Hidden</string>
      <boolean>false</boolean>
    </entry>
    <entry>
      <string>Dying</string>
      <boolean>false</boolean>
    </entry>
    <entry>
      <string>Bloodied</string>
      <boolean>false</boolean>
    </entry>
    <entry>
      <string>Dead</string>
      <boolean>false</boolean>
    </entry>
    <entry>
      <string>Other4</string>
      <boolean>false</boolean>
    </entry>
  </state>
  <propertyMap class="net.rptools.CaseInsensitiveHashMap">
    <store>
      <entry>
        <string>==== skills ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== SKILLS ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>currenttarget</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>CurrentTarget</key>
          <value class="string">Elf</value>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>current hp</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Current HP</key>
          <value class="string">0</value>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod arcana</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Arcana</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod insight</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Insight</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== hit points ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== HIT POINTS ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>religion</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Religion</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>action points remaining</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Action Points Remaining</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod streetwise</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Streetwise</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>nature</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Nature</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>temporary hp</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Temporary HP</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weapon 2 bonus</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weapon 2 Bonus</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>dungeoneering</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Dungeoneering</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>intelligence</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Intelligence</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>arcana</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Arcana</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== mod ability scores ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== MOD ABILITY SCORES ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>acrobatics</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Acrobatics</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod maximum hp</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Maximum HP</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== initiative ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== INITIATIVE ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod constitution mod</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Constitution Mod</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod bluff</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Bluff</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod perception</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Perception</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod religion</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Religion</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>will</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Will</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>stealth</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Stealth</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod reflexes</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Reflexes</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod initiative</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Initiative</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== basic info ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== BASIC INFO ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== mod defenses ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== MOD DEFENSES ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>athletics</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Athletics</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod surge value</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Surge Value</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== mod initiative ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== MOD INITIATIVE ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod acrobatics</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Acrobatics</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod heal</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Heal</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>dexterity</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Dexterity</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod intimidate</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Intimidate</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod charisma</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Charisma</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weapon 1 bonus</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weapon 1 Bonus</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== mod movement ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== MOD MOVEMENT ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod endurance</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Endurance</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>initiative</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Initiative</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>diplomacy</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Diplomacy</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== ability scores ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== ABILITY SCORES ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod nature</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Nature</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod speed</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Speed</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== equipment ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== EQUIPMENT ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod dungeoneering</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Dungeoneering</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>bluff</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Bluff</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>history</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>History</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod attack</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Attack</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>full name</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Full Name</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>money on hand</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Money on hand</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>stored money</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Stored money</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>death saving throws failed</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Death Saving Throws Failed</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weapon 3 bonus</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weapon 3 Bonus</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== defenses ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== DEFENSES ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>surge value</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Surge Value</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>wisdom</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Wisdom</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>intimidate</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Intimidate</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== mod hit points ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== MOD HIT POINTS ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod stealth</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Stealth</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== mod skills ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== MOD SKILLS ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>race</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Race</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weapon 3 damage</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weapon 3 Damage</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>endurance</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Endurance</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weapon 1 name</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weapon 1 Name</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod dexterity mod</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Dexterity Mod</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>level</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Level</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>height</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Height</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>heal</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Heal</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weapon 1 damage</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weapon 1 Damage</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod ac</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod AC</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>age</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Age</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weapon 2 damage</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weapon 2 Damage</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weight carried</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weight Carried</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>==== movement ====</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>==== MOVEMENT ====</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>gender</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Gender</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod intelligence</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Intelligence</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod history</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod History</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>class</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Class</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>surges per day</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Surges Per Day</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>diety</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Diety</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>healing surges remaining</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Healing Surges Remaining</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>size</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Size</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod strength</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Strength</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weapon 3 name</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weapon 3 Name</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>===== temporary modifiers ======</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>===== TEMPORARY MODIFIERS ======</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod thievery</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Thievery</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod will</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Will</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>constitution</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Constitution</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>alignment</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Alignment</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weight</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weight</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>fortitude</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Fortitude</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>perception</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Perception</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>insight</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Insight</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod surges per day</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Surges Per Day</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>experience</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Experience</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>===========================</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>===========================</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>speed</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Speed</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>strength</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Strength</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod athletics</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Athletics</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod wisdom</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Wisdom</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>reflexes</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Reflexes</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>charisma</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Charisma</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod fortitude</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Fortitude</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>weapon 2 name</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Weapon 2 Name</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>ac</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>AC</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>streetwise</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Streetwise</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod diplomacy</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Diplomacy</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>mod damage</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Mod Damage</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>thievery</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Thievery</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
      <entry>
        <string>maximum hp</string>
        <net.rptools.CaseInsensitiveHashMap_-KeyValue>
          <key>Maximum HP</key>
          <outer-class reference="../../../.."/>
        </net.rptools.CaseInsensitiveHashMap_-KeyValue>
      </entry>
    </store>
  </propertyMap>
  <macroPropertiesMap>
    <entry>
      <int>1</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>1</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Target = if(argCount() == 3, arg(argCount() - 1), currentToken())]
[h: Name = arg(0)]
[h: Default = arg(1)]
[h, token(Target): value = if(isPropertyEmpty(Name), Default, getProperty(Name))]
[h: macro.return = if(length(string(value)) == 0, Default, value)]</command>
        <label>getPropertyWithDefault</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>2</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>2</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h, foreach(macro, getMacros()): defineFunction(macro, macro + &quot;@Lib:Util&quot;)]
[h: defineFunction(&quot;json.unpack&quot;, &quot;json.unpack@Lib:Util&quot;, 0, 0)]</command>
        <label>onCampaignLoad</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>3</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>3</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: setProperty(arg(0), arg(1))]
[h, IF(arg(1) == arg(2)) : resetProperty(arg(0))]</command>
        <label>setPropertyWithDefault</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>4</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>4</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: TempHP = getPropertyWithDefault(&quot;Temporary HP&quot;, 0)]
[h: MaxHP = getProperty(&quot;Maximum HP&quot;)]
[h: HP = getPropertyWithDefault(&quot;Current HP&quot;, MaxHP)]
[h: BloodiedHP = MaxHP / 2]
[h: DyingHP = 0]
[h: DeadHP = if(isPC(), -MaxHP / 2, 0)]

[h: macro.return = json.set(
    &quot;&quot;,
    &quot;TempHP&quot;, TempHP,
    &quot;MaxHP&quot;, MaxHP,
    &quot;HP&quot;, HP,
    &quot;BloodiedHP&quot;, BloodiedHP,
    &quot;DyingHP&quot;, DyingHP,
    &quot;DeadHP&quot;, DeadHP
)]</command>
        <label>getHealthStats</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>5</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>5</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[stats = arg(0)]

[h: MaxHP = json.get(stats, &quot;MaxHP&quot;)]
[h: HP = json.get(stats, &quot;HP&quot;)]
[h: TempHP = json.get(stats, &quot;TempHP&quot;)]
[h: DeadHP = json.get(stats, &quot;DeadHP&quot;)]
[h: DyingHP = json.get(stats, &quot;DyingHP&quot;)]
[h: BloodiedHP = json.get(stats, &quot;BloodiedHP&quot;)]

[h: setProperty(&quot;Current HP&quot;, HP)]
[h: setPropertyWithDefault(&quot;Temporary HP&quot;, TempHP, 0)]

[h: state.Dead = if(HP &lt;= DeadHP, 1, 0)]
[h: state.Dying = if(!state.Dead &amp;&amp; HP &lt;= DyingHP, 1, 0)]
[h: state.Bloodied = if(!state.Dead &amp;&amp; !state.Dying &amp;&amp; HP &lt;= BloodiedHP, 1, 0)]

[h: setBar(&quot;Health&quot;, HP/MaxHP)]</command>
        <label>setHealthStats</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>6</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>6</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Health = arg(0)]

[h: stats = getHealthStats()]
[h: HP = json.get(stats, &quot;HP&quot;)]
[h: MaxHP = json.get(stats, &quot;MaxHP&quot;)]

&lt;!-- Calculate healing --&gt;
[h: NewHP = min(MaxHP, max(0, HP) + Health)]

[h: stats = json.set(stats, &quot;HP&quot;, NewHP)]
[h: setHealthStats(stats)]

[h: macro.return = NewHP - HP]</command>
        <label>heal</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>7</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>7</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Damage = arg(0)]

[h: Stats = getHealthStats()]
[h: HP = json.get(Stats, &quot;HP&quot;)]
[h: MaxHP = json.get(Stats, &quot;MaxHP&quot;)]
[h: TempHP = json.get(Stats, &quot;TempHP&quot;)]

&lt;!-- Calculate damage --&gt;
[h: HPDamage = max(Damage - TempHP, 0)]
[h: TempHP = max(TempHP - Damage, 0)]
[h: HP = HP - HPDamage]

[h: Stats = json.set(Stats, &quot;HP&quot;, HP)]
[h: Stats = json.set(Stats, &quot;TempHP&quot;, TempHP)]
[h: setHealthStats(stats)]

[h: macro.return = Damage]</command>
        <label>damage</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>8</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>8</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: attackResult = arg(0)]
[h: targetName = arg(1)]
[h: targetDefense = arg(2)]
 
[h: defenseValue = getProperty(targetDefense,targetName)]
[h: modDefense = getPropertyWithDefault(&quot;Mod &quot; + targetDefense, 0, targetName)]
[h: HalfLevel = halfLevel(targetName)]

[r,if(attackResult &gt;= defenseValue + modDefense + HalfLevel): 1; 0]</command>
        <label>hitCheck</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>9</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>9</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: AbilityName = arg(0)]
[h: Target = if(argCount() &gt; 1, arg(argCount() - 1), currentToken())]
[h: AbilityValue = getProperty(AbilityName, Target)]
[h: macro.return = floor((AbilityValue - 10) / 2)]</command>
        <label>getAbilityMod</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>14</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>14</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Type = getArg(macro.args, 0, &quot;all&quot;)]
[h: IsMultipleTargets = getArg(macro.args, 1, 0)]

[h: Targets = targetList(Type)]

[h, if(IsMultipleTargets == 1), CODE: {
    [h: CheckList = &quot;[]&quot;]
    [h: Format = &quot;Target%d|0|%s|CHECK&quot;]
    [h: NumTargets = listCount(Targets)]
    [h, for(i, 0, NumTargets), CODE: {
        [h: Target = listGet(Targets, i)]
        [h: Line = strformat(Format, i, Target)]
        [h: CheckList = json.append(CheckList, Line)]
    }]
    [h: CheckList = json.toList(CheckList, &quot;##&quot;)]
    [h: abort(input(CheckList))]

    [h: Result = &quot;&quot;]
    [h, for(i, 0, NumTargets), CODE: {
        [h: IsSelected = eval(&quot;Target&quot; + i)]
        [h, if(IsSelected == 1): Result = listAppend(Result, listGet(Targets, i))]
    }]
};{
    [h: CheckList = &quot;Result|&quot; + Targets +&quot;|Target|RADIO|VALUE=STRING&quot;]
    [h: abort(input(CheckList))]
}]
[h: macro.return = Result]</command>
        <label>askForTarget</label>
        <group>Dialogs</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>15</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>15</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Token = currentToken()]
[h, if(argCount() == 1): Token = arg(0)]
[h: Gender = getProperty(&quot;Gender&quot;, Token)]
[h, switch(Gender), code: 
    case &quot;Male&quot;: {[macro.return = &quot;he, his, his, He, His, His&quot;]};
    case &quot;Female&quot;: {[macro.return = &quot;she, her, hers, She, Her, Hers&quot;]};
    default: {[macro.return = &quot;it, its, its, It, Its, Its&quot;]}
]</command>
        <label>pronouns</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>17</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>17</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Type = getArg(macro.args, 0, &quot;Any&quot;)]
[h: Weapons = &quot;[]&quot;]
[h: i = 1]
[h, while(!isPropertyEmpty(&quot;Weapon &quot; + i + &quot; Name&quot;)), CODE: {
    [h: Weapon = getWeapon(i)]
    [h: WeaponType = json.get(Weapon, &quot;Type&quot;)]
    [h, if(WeaponType == Type || Type == &quot;Any&quot;):
        Weapons = json.append(Weapons, Weapon)]
    [h: i = i + 1]
}]
[h: macro.return = Weapons]</command>
        <label>getWeapons</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>16</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>16</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Args = if(json.isEmpty(arg(0)), &quot;[]&quot;, arg(0))]
[h: Position = arg(1)]
[h: Default = arg(2)]
[h, if(json.length(Args) &gt; Position), CODE: {
    [h: macro.return = json.get(Args, Position)]
};{
    [h: macro.return = Default]
}]</command>
        <label>getArg</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>19</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>19</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Index = arg(0)]
[h: Prefix = &quot;Weapon &quot; + Index + &quot; &quot;]
[h: macro.return = json.set(&quot;{}&quot;,
    &quot;Index&quot;, Index,
    &quot;Name&quot;, getProperty(Prefix + &quot;Name&quot;),
    &quot;Type&quot;, getPropertyWithDefault(Prefix + &quot;Type&quot;, &quot;None&quot;),
    &quot;Damage&quot;, getProperty(Prefix + &quot;Damage&quot;),
    &quot;Bonus&quot;, getPropertyWithDefault(Prefix + &quot; Bonus&quot;, 0)
)]</command>
        <label>getWeapon</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>18</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>18</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Array = arg(0)]
[h: Key = arg(1)]
[h: Result = &quot;[]&quot;]
[h, foreach(Object, Array), CODE: {
    [Result = json.append(Result, json.get(Object, Key))]
}]
[h: macro.return = Result]
</command>
        <label>json.getAll</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>21</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>21</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Filter = getArg(macro.args, 0, &quot;all&quot;)]
[h: TokenList = getVisibleTokenNames(&quot;json&quot;)]
[h: FilterList = &quot;[]&quot;]
[h, if (Filter == &apos;npc&apos;): FilterList = getNPCNames(&quot;json&quot;)]
[h, if (Filter == &apos;pc&apos;): FilterList = getPCNames(&quot;json&quot;)]
[h, if (Filter == &apos;all&apos;): FilterList = TokenList]
[h: Results = json.intersection(TokenList, FilterList)]
[h: Libraries = json.fromList(&quot;Lib:Util,Lib:UI,Lib:Skills,DM&quot;)]
[h: macro.return = json.toList(json.difference(Results, Libraries))]</command>
        <label>targetList</label>
        <group>Mechanics</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>20</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>20</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: lev = getArg(macro.args, 0, getProperty(&quot;Level&quot;))]
[h: xps = &quot;0,0,1000,2250,3750,5500,7500,10000,13000,16500,20500,26000,32000,39000,47000,57000,69000,83000,99000,119000,143000,175000,210000,255000,310000,375000,450000,550000,675000,825000,1000000&quot;]
[h: macro.return = listGet(xps, lev)]</command>
        <label>getLevelXP</label>
        <group>Mechanics</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>23</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>23</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: macro.return = &quot;AC, Fortitude, Reflexes, Will&quot;]</command>
        <label>defenseList</label>
        <group>Mechanics</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>22</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>22</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: macro.return = &quot;Strength, Constitution, Dexterity, Intelligence, Wisdom, Charisma&quot;]</command>
        <label>abilityList</label>
        <group>Mechanics</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>24</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>24</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: macro.return =&quot;Acrobatics, Arcana, Athletics, Bluff, Diplomacy, Dungeoneering, Endurance, Heal, History, Insight, Intimidate, Nature, Perception, Religion, Stealth, Streetwise, Thievery&quot;]</command>
        <label>skillList</label>
        <group>Mechanics</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>27</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>27</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Target = arg(0)]
[h: StateName = arg(1)]
[h: Current = getState(StateName, Target)]
[h: NewVal = getArg(macro.args, 2, Current)]
[h: setState(StateName, NewVal, Target)]
[h: macro.return = NewVal]
</command>
        <label>state</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>26</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>26</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Ability = arg(0)]
[h: OppSkill = arg(1)]
[h: Bonus = getArg(macro.args, 2, 0)]
[h: Target = getArg(macro.args, 3, &quot;&quot;)]
[h, if(Target == &quot;&quot;): Target = askForTarget(&quot;npc&quot;)]

[h: AttackMod = getPropertyWithDefault(&quot;Mod Attack&quot;, 0)]
[h: AbilityMod = getAbilityMod(Ability)]
[h: HalfLevel = halfLevel()]

[h: Roll = 1d20]
[h: Attack = Roll + AbilityMod + HalfLevel + Bonus + AttackMod]
[h: AttackRoll = &quot;1d20 (&quot; + Roll + &quot;) + Modifier (&quot; + (Attack - Roll) + &quot;) = &quot; + Attack + &quot; vs. &quot; + OppSkill]
[h: IsHit = hitCheck(Attack, Target, OppSkill)]
[h: IsCritical = if(Roll == 20 &amp;&amp; IsHit, 1, 0)]
[h: Description = if (IsCritical, &quot;scores a critical hit on&quot;, if (IsHit, &quot;hits&quot;, &quot;misses&quot;))]
[h: Pronoun = listGet(pronouns(), 1)]

[h: macro.return = json.set(&quot;&quot;,
    &quot;Description&quot;, Description,
    &quot;Roll&quot;, AttackRoll,
    &quot;RawRoll&quot;, Roll,
    &quot;Target&quot;, Target,
    &quot;IsHit&quot;, IsHit,
    &quot;IsCritical&quot;, IsCritical)]</command>
        <label>singleAttack</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>29</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>29</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Health = arg(0)]
[h: Player = arg(1)]

[h: switchToken(Player)]

[h: stats = getHealthStats()]
[h: HP = json.get(stats, &quot;TempHP&quot;)]

&lt;!-- Calculate healing --&gt;
[h: NewHP = max(HP, Health))]

[h: stats = json.set(stats, &quot;TempHP&quot;, NewHP)]
[h: setHealthStats(stats)]

[h: macro.return = Health]</command>
        <label>grantTempHp</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>28</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>28</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Ability = arg(0)]
[h: OppSkill = arg(1)]
[h: Result = &quot;[]&quot;]
[h, foreach (Target, askForTarget(&quot;all&quot;, 1)), CODE: {

    [h: Bonus = 0]
    [h: AttackMod = getPropertyWithDefault(&quot;Mod Attack&quot;, 0)]
    [h: AbilityMod = getAbilityMod(Ability)]
    [h: HalfLevel = halfLevel()]

    [h: Roll = 1d20]
    [h: Attack = Roll + AbilityMod + HalfLevel + Bonus + AttackMod]
    [h: AttackRoll = &quot;1d20 (&quot; + Roll + &quot;) + Modifier (&quot; + (Attack - Roll) + &quot;) = &quot; + Attack + &quot; vs. &quot; + OppSkill]
    [h: IsHit = hitCheck(Attack, Target, OppSkill)]
    [h: IsCritical = if(Roll == 20 &amp;&amp; IsHit, 1, 0)]
    [h: Description = if (IsCritical, &quot;scores a critical hit on&quot;, if (IsHit, &quot;hits&quot;, &quot;misses&quot;))]
    [h: Pronoun = listGet(pronouns(), 1)]

    [h: Result = json.append(Result, json.set(&quot;&quot;,
        &quot;Description&quot;, Description,
        &quot;Roll&quot;, AttackRoll,
        &quot;RawRoll&quot;, Roll,
        &quot;Target&quot;, Target))]
}]

[h: macro.return = Result]</command>
        <label>multiAttack</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>31</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>31</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Defaults = getArg(macro.args, 1, &quot;{}&quot;)]
[h, foreach(Key, Defaults): set(Key, json.get(Defaults, Key))]
[h, foreach(Key, arg(0)): set(Key, json.get(arg(0), Key))]
</command>
        <label>json.unpack</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>30</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>30</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: abort(getPropertyWithDefault(&quot;Allow Macros&quot;, 1))]
[h: json.unpack(arg(0))]
{Player} deals damage to {Target}.  {Extra}
[h: switchToken(Target)]
[h: damage(Damage)]</command>
        <label>allowDamage</label>
        <group>DM</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>35</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>35</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[r: json.get(macro.args, &apos;toSend&apos;)]</command>
        <label>conditionalOutput</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>32</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>32</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Props = arg(0)]
[h: OptionalArgs = json.set(&quot;&quot;,
    &quot;Ability&quot;, &quot;&quot;,
    &quot;Dice&quot;, 0,
    &quot;Sides&quot;, 0,
    &quot;Bonus&quot;, 0,
    &quot;Multiplier&quot;, 1)]
[h: DamageRoll = getArg(macro.args, 1, 0)]

[h: json.unpack(Props, OptionalArgs)]

[h: DamageMod = getPropertyWithDefault(&quot;Mod Damage&quot;, 0)]
[h: AbilityMod = 0]
[h, if(Ability != &quot;&quot;): AbilityMod = getAbilityMod(Ability)]

[h: DamageRoll = if(DamageRoll == 0, d(Dice, Sides), DamageRoll)]
[h: RollStr = Dice + &quot;d&quot; + Sides + &quot; + Ability + Bonus + ModDmg&quot;]
[h: RollResultStr = DamageRoll + &quot; + &quot; + AbilityMod + &quot; + &quot; + Bonus + &quot; + &quot; + DamageMod]
[h: CritRollResultStr = Dice*Sides + &quot; + &quot; + AbilityMod + &quot; + &quot; + Bonus + &quot; + &quot; + DamageMod]

[h: macro.return = json.set(&quot;&quot;, 
    &quot;Damage&quot;, 0, 
    &quot;RollCalc&quot;, &quot;&quot;, 
    &quot;CriticalDamage&quot;, 0,
    &quot;CriticalRollCalc&quot;, &quot;&quot;)]

[h, if(DamageRoll + AbilityMod + Bonus), CODE: {
    [h: Damage = DamageRoll + AbilityMod + Bonus + DamageMod]
    [h: CriticalDamage = Dice*Sides + AbilityMod + Bonus + DamageMod]
    [h: RollCalc = &quot;Damage = &quot; + RollStr + &quot; = &quot; + RollResultStr + &quot; = &quot; + Damage]
    [h: Damage = floor(Damage * Multiplier)]
    [h: RollCalc = RollCalc + if(Multiplier == 1, &quot;&quot;, &quot; * &quot; + Multiplier + &quot; = &quot; + Damage)]
    [h: CriticalRollCalc = &quot;CriticalDamage = &quot; + RollStr + &quot; = &quot; + CritRollResultStr + &quot; = &quot; + CriticalDamage]
    [h: CriticalDamage = floor(CriticalDamage * Multiplier)]
    [h: CriticalRollCalc = CriticalRollCalc + if(Multiplier == 1, &quot;&quot;, &quot; * &quot; + Multiplier + &quot; = &quot; + CriticalDamage)]
    [h: macro.return = json.set(macro.return,
        &quot;Damage&quot;, Damage,
        &quot;DamageRoll&quot;, RollCalc,
        &quot;DamageDiceRoll&quot;, DamageRoll,
        &quot;CriticalDamage&quot;, CriticalDamage,
        &quot;CriticalDamageRoll&quot;, CriticalRollCalc)]
}]
</command>
        <label>rollDamage</label>
        <group>Player</group>
        <sortby>a</sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>38</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>38</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: abort(getPropertyWithDefault(&quot;Allow Macros&quot;, 1))]
[h: json.unpack(arg(0))]
{Player} damages {Target}.  {Extra}
[h: switchToken(Target)]

[h: abort(input(
    &quot;Target|&quot; + token.name + &quot;||LABEL|&quot;,
    &quot;Original|&quot; + Damage + &quot;||LABEL|&quot;,
    &quot;Modified|&quot; + Damage
))]
[h: damage(Modified)]</command>
        <label>modifyDamage</label>
        <group>DM</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>39</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>39</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: s = arg(1)]
[gt, st, t(arg(0)): s]</command>
        <label>tooltipStr</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>36</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>36</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: toSend = &apos;{}&apos;]
[h: argTest = json.type(arg(0))]
[h, if(argTest==&apos;ARRAY&apos;), code:
{
    [h: toWho = &apos;list&apos;]
    [h: toSend = json.set(toSend, &apos;mlOutputList&apos;, arg(0))]
};{
    [h: toWho = arg(0)]
}]
[h: toSend = json.set(toSend, &apos;toSend&apos;, arg(1))]
[h: conditionalOutput = macroLinkText(&apos;conditionalOutput@this&apos;, toWho, toSend)]
[h: execLink(conditionalOutput, 1)]</command>
        <label>outputTo</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>37</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>37</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: abort(getPropertyWithDefault(&quot;Allow Macros&quot;, 1))]
[h: json.unpack(arg(0))]
{Target} remains unaffected</command>
        <label>denyDamage</label>
        <group>DM</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>42</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>42</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: setProperty(&quot;Allow Macros&quot;, 1)]</command>
        <label>resumeMacros</label>
        <group>DM</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>43</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>43</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Target = currentToken()]
[h: macro.return = floor(getProperty(&quot;Level&quot;, Target) / 2)]</command>
        <label>halfLevel</label>
        <group>Mechanics</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>40</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>40</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: DamageType = &quot;&quot;]
[h: Power = arg(0)]
[h: AttackResult = arg(1)]
[h: ApplicableResult = arg(2)]
[h: Damage = arg(3)]

[h: Props = json.get(Power, ApplicableResult)]

[h: json.unpack(Power)]
[h: json.unpack(AttackResult)]
[h: json.unpack(Damage)]
[h: Result = json.get(Power, ApplicableResult)]
[h: json.unpack(Result, json.set(&quot;&quot;, &quot;Extra&quot;, &quot;&quot;))]

[h: HitType = if(IsHit, &quot;Hit&quot;, &quot;Miss&quot;)]
[h: Applicable = if(ApplicableResult == HitType || ApplicableResult == &quot;Effect&quot;, 1, 0)]

&lt;!-- Needed for strformat expressions in Extra param --&gt;
[h: Player = getName()]


[r, if(ApplicableResult == HitType), CODE: {
    &lt;br&gt;{getName()}
    [gt, st, t(Description): Roll] {Target}. 
};{&lt;!-- --&gt;}]

[r, if(Applicable &amp;&amp; Damage != 0), CODE: {
    [h: Damage = if(IsCritical, CriticalDamage, Damage)]
    [h: DamageRoll = if(IsCritical, CriticalDamageRoll, DamageRoll)]
    [h: DmArgs = json.set(&quot;&quot;, 
            &quot;Damage&quot;, Damage, 
            &quot;DamageType&quot;, DamageType, 
            &quot;Extra&quot;, strformat(Extra), 
            &quot;Player&quot;, getName(),
            &quot;Target&quot;, Target)]
    [st, gt, t(&quot;( &quot; + DamageType + &quot; Damage )&quot;): DamageRoll]
    &lt;font color=&quot;blue&quot;&gt;
        [gm, r: macroLink(&quot;Allow&quot;, &quot;allowDamage@Lib:Util&quot;, &quot;all&quot;, DmArgs, &quot;DM&quot;) + &quot;,&quot;]
        [gm, r: macroLink(&quot;Deny&quot;, &quot;denyDamage@Lib:Util&quot;, &quot;all&quot;, DmArgs, &quot;DM&quot;) + &quot;,&quot; ]
        [gm, r: macroLink(&quot;Modify&quot;, &quot;modifyDamage@Lib:Util&quot;, &quot;all&quot;, DmArgs, &quot;DM&quot;)]
    &lt;/font&gt;
};{&lt;!-- --&gt;}]
[r, if(Applicable &amp;&amp; Damage == 0), CODE: {
    [r: if(Extra != &quot;&quot;, &quot;&lt;br&gt;&quot; , &quot;&quot;)]
    {strformat(Extra)}
};{&lt;!-- --&gt;}]
[h: macro.return = &quot;&quot;]</command>
        <label>describeAttackResult</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>41</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>41</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: setProperty(&quot;Allow Macros&quot;, 0)]</command>
        <label>suspendMacros</label>
        <group>DM</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>46</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>46</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: Defaults = json.set(&quot;&quot;,
    &quot;Ability&quot;, &quot;&quot;,
    &quot;Opposed&quot;, &quot;&quot;,
    &quot;Bonus&quot;, 0)]

[h: json.unpack(arg(0), Defaults)]

Using {Name}

[h, if(Targets &gt; 0): TargetTokens = askForTarget(TargetType, Targets - 1)]

[r, if(Ability != &quot;&quot; &amp;&amp; Opposed != &quot;&quot; &amp;&amp; Targets &gt; 0), CODE: {
    [h: HitDamage = rollDamage(Hit)]
    [h: Multiplier = json.get(Miss, &quot;Multiplier&quot;)]
    [h: MissRoll = if(Multiplier &amp;&amp; Multiplier != 1 &amp;&amp; json.get(Miss, &quot;Dice&quot;), json.get(HitDamage, &quot;DamageDiceRoll&quot;), 0)]
    [h: MissDamage = rollDamage(Miss, MissRoll)]
    [r, foreach(Target, TargetTokens, &quot;&quot;), CODE: {
        [h: AttackResult = singleAttack(Ability, Opposed, Bonus, Target)]
        [r: describeAttackResult(arg(0), AttackResult, &quot;Hit&quot;, HitDamage)]
        [r: describeAttackResult(arg(0), AttackResult, &quot;Miss&quot;, MissDamage)]
    }]
};{ &lt;!-- --&gt; }]

[h: EffectDamage = rollDamage(Effect)]
[h: DummyAttack = json.set(&quot;&quot;,
    &quot;Description&quot;, &quot;&quot;,
    &quot;Roll&quot;, 0,
    &quot;RawRoll&quot;, &quot;&quot;,
    &quot;Target&quot;, &quot;&quot;,
    &quot;IsHit&quot;, 0,
    &quot;IsCritical&quot;, 0)]
[r, if(json.get(EffectDamage, &quot;Damage&quot;) != 0), CODE: {
    [r, foreach(Target, TargetTokens, &quot;&quot;), CODE: { 
        [h: Roll = &quot;Not Applicable&quot;]
        &lt;br&gt;[r: getName()] [st, gt, t(&quot;hits&quot;) : Roll] [r: Target]
        [r: describeAttackResult(arg(0), json.set(DummyAttack, &quot;Target&quot;, Target), &quot;Effect&quot;, EffectDamage)]
    }]
};{
    [r: describeAttackResult(arg(0), DummyAttack, &quot;Effect&quot;, EffectDamage)]
}]
</command>
        <label>usePower</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>47</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>47</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: macro.return  = &quot;&lt;br&gt;&quot; + getName() + &quot;: &quot;]</command>
        <label>emote</label>
        <group></group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>44</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>44</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>&lt;!-- [gm, r: macroLink(&quot;Suspend Macros&quot;, &quot;suspendMacros@Lib:Util&quot;, &quot;none&quot;, &quot;&quot;, &quot;DM&quot;) + &quot;, &quot;] --&gt;</command>
        <label>suspendLink</label>
        <group>DM</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>45</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>45</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>&lt;!-- [gm, r: macroLink(&quot;Resume Macros&quot;, &quot;resumeMacros@Lib:Util&quot;, &quot;none&quot;, &quot;&quot;, &quot;DM&quot;) + &quot;, &quot;] --&gt;</command>
        <label>resumeLink</label>
        <group>DM</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>51</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>51</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>.oddRow { background-color: #FFFFFF }
.evenRow { background-color: #EEEEAA }
#stats th { background-color: #113311; color: #FFFFFF; text-align:left;}
.WeaponName a {
    background-color: #55AA55;
    color: white;
    text-align: center;
}
.page a {
} 
.currentPage a {
   color: #880000;
}
#powers {
    color:white;
    font-weight:bold;
    width:100%;
}
#powers a {
    color:white;
    font-weight:bold;
}
th {
    text-align:left;
    padding:4px;
}
td {
    text-align:right;
    padding:4px;
}
.a-at-will {
    background-color:#008800;
}
.b-encounter {
    background-color:#880000;
}
.c-daily {
    background-color:#666666;
}
.d-other {
    background-color:#000088;
}</command>
        <label>CssCharSheet</label>
        <group>UI</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>50</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>50</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: propNames = &quot;Strength, Dexterity, Constitution, Intelligence, Wisdom, Charisma&quot;] 
     &lt;table&gt;
        &lt;tr&gt;
          &lt;td&gt;
            &lt;img src=&apos;[r: getTokenImage(100)]&apos;&gt;&lt;/img&gt;
          &lt;/td&gt;
          &lt;td&gt;
            &lt;table id=&quot;stats&quot;&gt;
              &lt;tr&gt;
                &lt;th&gt;Name&lt;/th&gt;
                &lt;th&gt;Score&lt;/th&gt;
              &lt;/tr&gt;
              [h: class = &quot;oddRow&quot;]
              [foreach(prop, propNames, &quot;&quot;), code: {
                &lt;tr class=&quot;[r:class]&quot;&gt;
                  &lt;td&gt;[r: prop]&lt;/td&gt;
                  &lt;td&gt;[r: getProperty(prop)]&lt;/td&gt;
                &lt;/tr&gt;
                [h: class = if(class==&quot;oddRow&quot;, &quot;evenRow&quot;, &quot;oddRow&quot;)]
              }]
            &lt;/table&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;</command>
        <label>CharSheetMain</label>
        <group>UI</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>49</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>49</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>

[h: currentPage = macro.args]
[h: pages = &quot;Powers,Skills&quot;]
&lt;table&gt;
  &lt;tr&gt;
    [foreach(page, pages,&quot;&quot;), code: {
      [h,if (page == currentPage): class=&quot;currentPage&quot; ; class=&quot;page&quot;]
      [h: callback = &quot;CharSheet@&quot;+getMacroLocation()]
      &lt;td class=&quot;[r: class]&quot;&gt;
        [r: macroLink(page, callback, &quot;none&quot;, &quot;Page=&quot;+page)]
      &lt;/td&gt;
    }]
  &lt;/tr&gt;
&lt;/table&gt;
&lt;hr&gt;</command>
        <label>CharSheetHeader</label>
        <group>UI</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>48</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>48</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[frame(&quot;CharSheet&quot;): {
  [h: page = getStrProp(macro.args, &quot;Page&quot;)]
  [h,if(page==&quot;&quot;): page=&quot;Powers&quot;]
  &lt;html&gt;
    &lt;head&gt;
      &lt;title&gt;Character Sheet&lt;/title&gt;
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;CssCharSheet@[r: getMacroLocation()]&quot;&gt;
    &lt;/head&gt;
    &lt;body&gt;
      [macro(&quot;CharSheetHeader@this&quot;): page]
      [macro(&quot;CharSheet&quot;+page+&quot;@this&quot;): &quot;&quot;]
      [macro(&quot;CharSheetFooter@this&quot;): page]
    &lt;/body&gt;
  &lt;/html&gt;
}]</command>
        <label>CharSheet</label>
        <group>UI</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>55</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>55</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: HalfLevel = halfLevel()]
&lt;table&gt;
[foreach(SkillName, skillList(), &quot;&quot;), CODE: {
    [h: SkillValue = getProperty(SkillName)]
    [h: SkillMod = getPropertyWithDefault(&quot;Mod &quot; + SkillName, 0)]
    &lt;tr&gt;
        &lt;th&gt;{SkillValue + SkillMod + HalfLevel}&lt;/th&gt;
        &lt;th&gt;{SkillName}&lt;/th&gt;
        &lt;td&gt;[r: macroLink(&quot;Use&quot;, &quot;useSkill@Lib:Util&quot;, &quot;all&quot;, SkillName)]&lt;/td&gt;
    &lt;/tr&gt;
}]
&lt;/table&gt;</command>
        <label>CharSheetSkills</label>
        <group>UI</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>54</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>54</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: MacroIds = getMacroGroup(getName(), &quot;json&quot;, &quot;Lib:Skills&quot;)]
[h: Macros = &quot;&quot;]
[h, foreach(MacroId, MacroIds), CODE: {
    [h: Macros = json.append(Macros, getMacroProps(MacroId, &quot;json&quot;, &quot;Lib:Skills&quot;))]
}]
[h: Macros = json.sort(Macros, &quot;a&quot;, &quot;sortBy&quot;, &quot;label&quot;)]
&lt;table id=&quot;powers&quot;&gt;
[foreach(Power, Macros, &quot;&quot;), CODE: {
    [h: Label = json.get(Power, &quot;label&quot;)]
    [h: SortBy = json.get(Power, &quot;sortBy&quot;)]
    &lt;tr class=&quot;{SortBy}&quot;&gt;
    &lt;th&gt;{Label}&lt;/th&gt;
    &lt;td&gt;[r: macroLink(&quot;Use&quot;, Label + &quot;@Lib:Skills&quot;, &quot;all&quot;)]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;/tr&gt;
}]
&lt;/table&gt;</command>
        <label>CharSheetPowers</label>
        <group>UI</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>53</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>53</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>&lt;!-- ======================================================================
     ====
     ==== Outputs a &quot;progress&quot; bar
     ====
     ==== Parameters (accepts a string property list with following keys)
     ====
     ====   MaxLen - Maximum length of status bar.
     ====   MaxValue - The &quot;Full&quot; value for the bar.
     ====   Value - The current value for the bar.
     ====   Label - The label for the bar.
     ====   Color - R,G,B color
     ====
     ====================================================================== --&gt;
[h: r0=200] [h: g0=200] [h: b0=200]
[h: MaxLen=getStrProp(macro.args, &quot;MaxLen&quot;)]
[h: MaxValue=getStrProp(macro.args, &quot;MaxValue&quot;)]
[h: Value=getStrProp(macro.args, &quot;Value&quot;)]
[h: Color=getStrProp(macro.args, &quot;Color&quot;)]
[h: Label=getStrProp(macro.args, &quot;Label&quot;)]
[h: r1=listGet(Color,0)]
[h: g1=listGet(Color,1)]
[h: b1=listGet(Color,2)]
[h: Len=max(min(round(Value*MaxLen/MaxValue+0.4999),MaxLen),0)]
[h: c=min(round(Value/MaxValue+0.4999),1)]
[h: col=min(max(Len,0),1)*c]
[h: r=eval(&quot;r&quot;+col)] [h: g=eval(&quot;g&quot;+col)] [h: b=eval(&quot;b&quot;+col)]
[h: r=eval(&quot;r&quot;+col)] [h: g=eval(&quot;g&quot;+col)] [h: b=eval(&quot;b&quot;+col)]
&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;span title=&quot;{Value}/{MaxValue}&quot;&gt;{Label}&lt;/span&gt;&lt;/td&gt;
    &lt;td style=&quot;background-color: rgb({r},{g},{b})&quot;&gt;
      &lt;span title=&quot;{Value}/{MaxValue}&quot;&gt;[c(Len, &quot;&quot;),r: &quot;&amp;nbsp;&quot;]&lt;/span&gt;
    &lt;/td&gt;
    [if(MaxLen-Len&gt;0), code: {
      &lt;td style=&quot;background-color: rgb({r0},{g0},{b0})&quot;&gt;
        &lt;span title=&quot;{Value}/{MaxValue}&quot;&gt;[c(MaxLen-Len,&quot;&quot;),r: &quot;&amp;nbsp;&quot;]&lt;/span&gt;
      &lt;/td&gt;
    }]
  &lt;/tr&gt;
&lt;/table&gt;
</command>
        <label>StatusBar</label>
        <group>UI</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>52</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>52</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>&lt;!-- ======================================================================
     ====
     ==== Outputs a red/yellow/green bar
     ====
     ==== Parameters (accepts a string property list with following keys)
     ====
     ====   MaxLen - Maximum length of status bar.
     ====   MaxValue - The &quot;Full&quot; value for the bar.
     ====   Value - The current value for the bar.
     ====   Label - The label for the bar.
     ====
     ====================================================================== --&gt;
&lt;!-- Set up the colors for our &quot;Traffic Lights&quot; --&gt;
[h: r0=200] [h: g0=200] [h: b0=200]
[h: r1=200] [h: g1=0]   [h: b1=0]
[h: r2=255] [h: g2=140] [h: b2=0]
[h: r3=0]   [h: g3=200] [h: b3=0]
[h: MaxLen=getStrProp(macro.args, &quot;MaxLen&quot;)]
[h: MaxValue=getStrProp(macro.args, &quot;MaxValue&quot;)]
[h: Value=getStrProp(macro.args, &quot;Value&quot;)]
[h: Label=getStrProp(macro.args, &quot;Label&quot;)]
[h: Len=max(min(round(Value*MaxLen/MaxValue+0.4999),MaxLen),0)]
[h: Len=if(Value&gt;=MaxValue,MaxLen, Len)]
[h: c=min(round(Value*3/MaxValue+0.4999),3)]
[h: col=min(max(Len,0),1)*c]
[h: r=eval(&quot;r&quot;+col)] [h: g=eval(&quot;g&quot;+col)] [h: b=eval(&quot;b&quot;+col)]
&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;span title=&quot;{Value}/{MaxValue}&quot;&gt;{Label}&lt;/span&gt;&lt;/td&gt;
    &lt;td style=&quot;background-color: rgb({r},{g},{b})&quot;&gt;
      &lt;span title=&quot;{Value}/{MaxValue}&quot;&gt;[c(Len, &quot;&quot;),r: &quot;&amp;nbsp;&quot;]&lt;/span&gt;
    &lt;/td&gt;
    [if(MaxLen-Len&gt;0), code: {
      &lt;td style=&quot;background-color: rgb({r0},{g0},{b0})&quot;&gt;
        &lt;span title=&quot;{Value}/{MaxValue}&quot;&gt;[c(MaxLen-Len,&quot;&quot;),r: &quot;&amp;nbsp;&quot;]&lt;/span&gt;
      &lt;/td&gt;
    }]
  &lt;/tr&gt;
&lt;/table&gt;

</command>
        <label>TrafficLightBar</label>
        <group>UI</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>57</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>57</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>&lt;br&gt;&lt;hr&gt;
[r: macroLink(&quot;End Turn&quot;, &quot;End Turn@Lib:Skills&quot;, &quot;all&quot;)] /
[r: macroLink(&quot;Roll Initiative&quot;, &quot;Roll Initiative@Lib:Skills&quot;, &quot;all&quot;)]&lt;br&gt;
[r: macroLink(&quot;Take Damage&quot;, &quot;Apply Damage@Lib:Skills&quot;, &quot;all&quot;)] /
[r: macroLink(&quot;Heal&quot;, &quot;Apply Healing@Lib:Skills&quot;, &quot;all&quot;)] /
[r: macroLink(&quot;Healing Surge&quot;, &quot;Healing Surge@Lib:Skills&quot;, &quot;all&quot;)]&lt;br&gt;
[r: macroLink(&quot;Saving Throw&quot;, &quot;Saving Throw@Lib:Skills&quot;, &quot;all&quot;)]&lt;br&gt;
</command>
        <label>CharSheetFooter</label>
        <group>UI</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
    <entry>
      <int>56</int>
      <net.rptools.maptool.model.MacroButtonProperties>
        <saveLocation>Token</saveLocation>
        <index>56</index>
        <colorKey>default</colorKey>
        <hotKey>None</hotKey>
        <command>[h: SkillName = arg(0)]
[h: SkillValue = getProperty(SkillName)]
[h: SkillMod = getPropertyWithDefault(&quot;Mod &quot; + SkillName, 0)]
[h: HalfLevel = halfLevel()]
Using [gt, st, t(SkillName): 1d20 + SkillValue + SkillMod + HalfLevel] skill</command>
        <label>useSkill</label>
        <group>Player</group>
        <sortby></sortby>
        <autoExecute>true</autoExecute>
        <includeLabel>false</includeLabel>
        <applyToTokens>false</applyToTokens>
        <fontColorKey>black</fontColorKey>
        <fontSize>1.00em</fontSize>
        <minWidth></minWidth>
        <maxWidth></maxWidth>
        <allowPlayerEdits>false</allowPlayerEdits>
        <toolTip></toolTip>
        <commonMacro>false</commonMacro>
        <compareGroup>true</compareGroup>
        <compareSortPrefix>true</compareSortPrefix>
        <compareCommand>true</compareCommand>
        <compareIncludeLabel>true</compareIncludeLabel>
        <compareAutoExecute>true</compareAutoExecute>
        <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
      </net.rptools.maptool.model.MacroButtonProperties>
    </entry>
  </macroPropertiesMap>
  <speechMap/>
</net.rptools.maptool.model.Token>