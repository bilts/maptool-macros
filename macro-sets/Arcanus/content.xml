<list>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>1</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me 
[h: Result = singleAttack(&quot;Intelligence&quot;, &quot;Fortitude&quot;)]
[h: Description = json.get(Result, &quot;Description&quot;)]
[h: Roll = json.get(Result, &quot;Roll&quot;)]
[h: Target = json.get(Result, &quot;Target&quot;)]

[st, gt, t(Description): Roll] {Target} with Ray of Frost
</command>
    <label>Ray of Frost</label>
    <group>At Will</group>
    <sortby></sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>false</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>2</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me 
[h: Ability = &quot;Intelligence&quot;]
[h: AbilityMod = getAbilityMod(Ability)]
[h: DamageMod = getPropertyWithDefault(&quot;Mod Damage&quot;, 0)]
deals [gt, st, t(&quot;damage&quot;): 1d6 + AbilityMod+ DamageMod], and the target is slowed until the end of Arcanus&apos; next turn
</command>
    <label>Ray of Frost Damage</label>
    <group>At Will</group>
    <sortby></sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>false</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>3</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me casts Scorching Burst &lt;br&gt;
[r, foreach (Result, multiAttack(&quot;Intelligence&quot;, &quot;Reflexes&quot;), &quot;&lt;br&gt;&quot;), CODE: {
[h: Description = json.get(Result, &quot;Description&quot;)]
[h: Roll = json.get(Result, &quot;Roll&quot;)]
[h: Target = json.get(Result, &quot;Target&quot;)]

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; He [st, gt, t(Description): Roll] {Target}
}]</command>
    <label>Scorching Burst</label>
    <group>At Will</group>
    <sortby></sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>true</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>4</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me 
[h: Ability = &quot;Intelligence&quot;]
[h: AbilityMod = getAbilityMod(Ability)]
[h: DamageMod = getPropertyWithDefault(&quot;Mod Damage&quot;, 0)]
deals [gt, st, t(&quot;damage&quot;): 1d6 + AbilityMod+ DamageMod] to each target
</command>
    <label>Scorching Burst Damage</label>
    <group>At Will</group>
    <sortby></sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>false</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>5</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me casts Icy Terrain, making the blast area difficult terrain until the end of his next turn&lt;br&gt;
[r, foreach (Result, multiAttack(&quot;Intelligence&quot;, &quot;Reflexes&quot;), &quot;&lt;br&gt;&quot;), CODE: {
[h: Description = json.get(Result, &quot;Description&quot;)]
[h: Roll = json.get(Result, &quot;Roll&quot;)]
[h: Target = json.get(Result, &quot;Target&quot;)]

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; He [st, gt, t(Description): Roll] {Target}
}]</command>
    <label>Icy Terrain</label>
    <group>Encounter</group>
    <sortby></sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>false</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>6</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me 
[h: Ability = &quot;Intelligence&quot;]
[h: AbilityMod = getAbilityMod(Ability)]
[h: DamageMod = getPropertyWithDefault(&quot;Mod Damage&quot;, 0)]
deals [gt, st, t(&quot;damage&quot;): 1d6 + AbilityMod+ DamageMod] to each target, and each target is knocked prone</command>
    <label>Icy Terrain Damage</label>
    <group>Encounter</group>
    <sortby></sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>false</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>7</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me 
[h: Result = singleAttack(&quot;Intelligence&quot;, &quot;Reflexes&quot;)]
[h: Description = json.get(Result, &quot;Description&quot;)]
[h: Roll = json.get(Result, &quot;Roll&quot;)]
[h: Target = json.get(Result, &quot;Target&quot;)]

[st, gt, t(Description): Roll] {Target} with a flaming sphere
</command>
    <label>Flaming Sphere</label>
    <group>Daily</group>
    <sortby></sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>false</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>8</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me 
[h: Ability = &quot;Intelligence&quot;]
[h: AbilityMod = getAbilityMod(Ability)]
[h: DamageMod = getPropertyWithDefault(&quot;Mod Damage&quot;, 0)]
deals [gt, st, t(&quot;damage&quot;): 2d6 + AbilityMod+ DamageMod]
</command>
    <label>Flaming Sphere Damage</label>
    <group>Daily</group>
    <sortby></sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>false</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>9</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me creates a freezing cloud until the end of his next turn.  Any creature which enters the cloud or starts its turn there will be subject to an attack. &lt;br&gt;
[r, foreach (Result, multiAttack(&quot;Intelligence&quot;, &quot;Fortitude&quot;), &quot;&lt;br&gt;&quot;), CODE: {
[h: Description = json.get(Result, &quot;Description&quot;)]
[h: Roll = json.get(Result, &quot;Roll&quot;)]
[h: Target = json.get(Result, &quot;Target&quot;)]

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; He [st, gt, t(Description): Roll] {Target}
}]</command>
    <label>Freezing Cloud</label>
    <group>Daily</group>
    <sortby></sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>false</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>10</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me 
[h: Ability = &quot;Intelligence&quot;]
[h: AbilityMod = getAbilityMod(Ability)]
[h: DamageMod = getPropertyWithDefault(&quot;Mod Damage&quot;, 0)]
deals [gt, st, t(&quot;damage&quot;): 1d8 + AbilityMod+ DamageMod] to each target.
</command>
    <label>F. C. Hit Damage</label>
    <group>Daily</group>
    <sortby>Freezing</sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>false</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
  <net.rptools.maptool.model.MacroButtonProperties>
    <saveLocation>Token</saveLocation>
    <index>11</index>
    <colorKey>default</colorKey>
    <hotKey>None</hotKey>
    <command>/me 
[h: Ability = &quot;Intelligence&quot;]
[h: AbilityMod = getAbilityMod(Ability)]
[h: DamageMod = getPropertyWithDefault(&quot;Mod Damage&quot;, 0)]
deals [gt, st, t(&quot;damage&quot;): floor((1d8 + AbilityMod) / 2)+ DamageMod] to each target.
</command>
    <label>F. C. Miss Damage</label>
    <group>Daily</group>
    <sortby>Freezing</sortby>
    <autoExecute>true</autoExecute>
    <includeLabel>false</includeLabel>
    <applyToTokens>false</applyToTokens>
    <fontColorKey>black</fontColorKey>
    <fontSize>1.00em</fontSize>
    <minWidth></minWidth>
    <maxWidth></maxWidth>
    <allowPlayerEdits>true</allowPlayerEdits>
    <toolTip></toolTip>
    <commonMacro>false</commonMacro>
    <compareGroup>true</compareGroup>
    <compareSortPrefix>true</compareSortPrefix>
    <compareCommand>true</compareCommand>
    <compareIncludeLabel>true</compareIncludeLabel>
    <compareAutoExecute>true</compareAutoExecute>
    <compareApplyToSelectedTokens>true</compareApplyToSelectedTokens>
  </net.rptools.maptool.model.MacroButtonProperties>
</list>